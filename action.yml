name: "WD201 Action"
description: 'Handles checkout, testing, and grading for WD201 submissions'
author: 'pupilfirst'

inputs:
  level_name:
    description: "Name of level e.g., L1, L2, etc."
  globs:
    description: "This contains the list of files that will checked during repo verification,"
  report_file_path:
    description: "It contains the path to report.json file, ex: submission/someFolder/report.json"

runs:
  using: "composite"
  steps:
    # checkout student's repository and verify its structure
    - uses: actions/checkout@v2
    - name: Checkout student repo and verify its structure
      id: check-student-repo
      uses: pupilfirst/check-repo-action@v1
      with:
        repoPath: submission
        globs: ${{ inputs.globs }}

    # Checkout the wd201-tests repo
    - name: Check out the solutions repo
      if: ${{ steps.check-student-repo.outputs.result == 'success' }}
      id: checkout-solutions-repo
      uses: actions/checkout@v2
      with:
        repository: pupilfirst/wd201-tests
        path: solution

    # Copy test files to student's repo
    - name: Copy test files to submission repo
      if: steps.checkout-solutions-repo.outcome == 'success'
      continue-on-error: true
      run: |
        # Conditional logic to copy necessary files  based on the level
        case ${{ inputs.level_name }} in
          "L2")
            cp -r solution/l2/cypress submission/http-server
            cp solution/l2/cypress.config.js submission/http-server
            cp solution/l2/generateReportFromResults.js submission/http-server
            cp solution/l2/package-lock.json submission/http-server
            cp solution/l2/package.json submission/http-server
            ;;
        esac
      shell: bash

    # run the tests
    - name: Setup and Test Submission
      if: ${{ steps.check-student-repo.outputs.result == 'success' && steps.checkout-solutions-repo.outcome == 'success' }}
      id: check-submission-output
      continue-on-error: true
      run: |
        # Conditional logic to run tests based on the level
        case ${{ inputs.level_name }} in
          "L1")
            node submission/hello-world/index.js > output.txt
            ;;
          "L2")
            cd submission/http-server
            npm install
            npm run test
            ;;
          # ... Add cases for other levels (L3 to L11)
        esac
      shell: bash

    # Report failure
    - name: Report failure if tests fails
      if: steps.check-submission-output.outcome == 'failure'
      uses: pupilfirst/grade-action@v1
      with:
        fail_submission: true
        feedback: |
          We tried to run the script using the command `node hello-world/index.js`,
          but some reason, we couldn't. Before submitting again, could you
          please verify whether your `hello-world/index.js` file contains
          valid JavaScript code? Also, please ensure that you run your script
          before submitting again.

          If this error persists, please ask for assistance on the
          **#wd-forum** channel on the Pupilfirst School Discord server, and
          one of our team members will take a look at why we're unable to
          execute your code.

    # Report Success
    - name: Generate feedback Report if all tests passed
      id: generate-report
      if: ${{steps.check-submission-output.outcome == 'success' && steps.checkout-solutions-repo.outcome == 'success'}}
      continue-on-error: true
      run: |
        case ${{ inputs.level_name }} in
          "L1")
            echo "const fs = require(\"fs\");

            function checkValidString(input) {
              return input.toLowerCase().indexOf(\"hello\") > -1;
            }

            fs.readFile(\"output.txt\", \"utf8\", (err, data) => {
              if (err) {
                throw err;
              } else {
                let passed = checkValidString(data);
                let reportFile = \"./report.json\";
                let feedback = passed
                  ? \"Good work! It looks like your code prints the output according to the specification.\"
                  : \"Uh oh! It looks like you've missed some parts of the assignment! Please ensure that your `index.js` script outputs the expected message mentioned in the assignment and try again.\";
                let report = {
                  version: 0,
                  grade: passed ? \"accept\" : \"reject\",
                  status: passed ? \"success\" : \"failure\",
                  feedback: feedback,
                };
                fs.writeFileSync(reportFile, JSON.stringify(report));
              }
            });" | node
          "L2")
            cd submission/http-server && node generateReportFromResults.js
            ;;
          # ... Add cases for other levels (L3 to L11)
        esac
      shell: bash

    # Grade submissions
    - name: Grade the submission based on test results
      uses: pupilfirst/grade-action@v1
      if: steps.generate-report.outcome == 'success'
      with:
        report_file_path: ${{ inputs.report_file_path }}
